// 数据相关的类型定义

// CSV文件中的原始条目数据
export interface RawEntry {
  entry?: string;
  variant?: string;
  id?: string;
  djt_id?: string;
  dkw_id?: string;
  radical?: string;
  jis_char?: string;
  jis_notes?: string;
  ucs?: string;
  notes?: string;
  has_shapes?: string;
  khi_id?: string;
  khi_shape_count?: string;
  khi_sample_count?: string;
  khm_id?: string;
  khm_shape_count?: string;
  khm_sample_count?: string;
  hok_id?: string;
  hok_shape_count?: string;
  hok_sample_count?: string;
  kyd_id?: string;
  kyd_shape_count?: string;
  kyd_sample_count?: string;
  kar_id?: string;
  kar_shape_count?: string;
  kar_sample_count?: string;
  kae_id?: string;
  kae_shape_count?: string;
  kae_sample_count?: string;
  tzj_id?: string;
  tzj_shape_count?: string;
  tzj_sample_count?: string;
  hos_id?: string;
  hos_shape_count?: string;
  hos_sample_count?: string;
  nak_id?: string;
  nak_shape_count?: string;
  nak_sample_count?: string;
  jhk_id?: string;
  jhk_shape_count?: string;
  jhk_sample_count?: string;
  ink_id?: string;
  ink_shape_count?: string;
  ink_sample_count?: string;
  nkk_id?: string;
  nkk_shape_count?: string;
  nkk_sample_count?: string;
  kcc_id?: string;
  kcc_shape_count?: string;
  kcc_sample_count?: string;
  wad_id?: string;
  wad_shape_count?: string;
  wad_sample_count?: string;
  doh_id?: string;
  doh_shape_count?: string;
  doh_sample_count?: string;
  tzs_id?: string;
  tzs_shape_count?: string;
  tzs_sample_count?: string;
  kak_id?: string;
  kak_shape_count?: string;
  kak_sample_count?: string;
  sys_id?: string;
  sys_shape_count?: string;
  sys_sample_count?: string;
  tsu_id?: string;
  tsu_shape_count?: string;
  tsu_sample_count?: string;
  hod_id?: string;
  hod_shape_count?: string;
  hod_sample_count?: string;
  gok_id?: string;
  gok_shape_count?: string;
  gok_sample_count?: string;
  k24_id?: string;
  k24_shape_count?: string;
  k24_sample_count?: string;
  kcj_id?: string;
  kcj_shape_count?: string;
  kcj_sample_count?: string;
  kbk_id?: string;
  kbk_shape_count?: string;
  kbk_sample_count?: string;
  sik_id?: string;
  sik_shape_count?: string;
  sik_sample_count?: string;
  skk_id?: string;
  skk_shape_count?: string;
  skk_sample_count?: string;
  kyu_id?: string;
  kyu_shape_count?: string;
  kyu_sample_count?: string;
  ksk_id?: string;
  ksk_shape_count?: string;
  ksk_sample_count?: string;
  wan_id?: string;
  wan_shape_count?: string;
  wan_sample_count?: string;
  kss_id?: string;
  kss_shape_count?: string;
  kss_sample_count?: string;
  kyo_id?: string;
  kyo_shape_count?: string;
  kyo_sample_count?: string;
  smk_id?: string;
  smk_shape_count?: string;
  smk_sample_count?: string;
  jou_id?: string;
  jou_shape_count?: string;
  jou_sample_count?: string;
  keg_id?: string;
  keg_shape_count?: string;
  keg_sample_count?: string;
  dng_id?: string;
  dng_shape_count?: string;
  dng_sample_count?: string;
  mam_id?: string;
  mam_shape_count?: string;
  mam_sample_count?: string;
  drt_id?: string;
  drt_shape_count?: string;
  drt_sample_count?: string;
  kgk_id?: string;
  kgk_shape_count?: string;
  kgk_sample_count?: string;
  myz_id?: string;
  myz_shape_count?: string;
  myz_sample_count?: string;
  kda_id?: string;
  kda_shape_count?: string;
  kda_sample_count?: string;
  sok_id?: string;
  sok_shape_count?: string;
  sok_sample_count?: string;
  yhk_id?: string;
  yhk_shape_count?: string;
  yhk_sample_count?: string;
  nto_id?: string;
  nto_shape_count?: string;
  nto_sample_count?: string;
  nkm_id?: string;
  nkm_shape_count?: string;
  nkm_sample_count?: string;
  okd_id?: string;
  okd_shape_count?: string;
  okd_sample_count?: string;
  kmi_id?: string;
  kmi_shape_count?: string;
  kmi_sample_count?: string;
  zkd_id?: string;
  zkd_shape_count?: string;
  zkd_sample_count?: string;
  jyu_id?: string;
  jyu_shape_count?: string;
  jyu_sample_count?: string;
  fhs_id?: string;
  fhs_shape_count?: string;
  fhs_sample_count?: string;
  khh_id?: string;
  khh_shape_count?: string;
  khh_sample_count?: string;
  kkh_id?: string;
  kkh_shape_count?: string;
  kkh_sample_count?: string;
  ini_id?: string;
  ini_shape_count?: string;
  ini_sample_count?: string;
  sai_id?: string;
  sai_shape_count?: string;
  sai_sample_count?: string;
  kad_id?: string;
  kad_shape_count?: string;
  kad_sample_count?: string;
  ykk_id?: string;
  ykk_shape_count?: string;
  ykk_sample_count?: string;
  saa_id?: string;
  saa_shape_count?: string;
  saa_sample_count?: string;
  sab_id?: string;
  sab_shape_count?: string;
  sab_sample_count?: string;
  wks_id?: string;
  wks_shape_count?: string;
  wks_sample_count?: string;
  wke_id?: string;
  wke_shape_count?: string;
  wke_sample_count?: string;
  sgs_id?: string;
  sgs_shape_count?: string;
  sgs_sample_count?: string;
  sts_id?: string;
  sts_shape_count?: string;
  sts_sample_count?: string;
  kkd_id?: string;
  kkd_shape_count?: string;
  kkd_sample_count?: string;
}

// 书籍元数据信息
export interface BookMetadata {
  code?: string;
  id?: string;
  type2?: string;
  title?: string;
  type1?: string;
  alias?: string;
  order?: string;
  year?: string;
  standard?: string;
  isPrivate?: string;
  owner?: string;
}

// 字形数据
export interface GlyphData {
  book_id: string;
  book_type: string;
  glyph_id: string;
  shape_count: string;
  sample_count: string;
}

// 处理后的字符条目（包含嵌套的glyphs数组）
export interface CharacterEntry {
  entry?: string;
  variant?: string;
  id?: string;
  djt_id?: string;
  dkw_id?: string;
  radical?: string;
  jis_char?: string;
  jis_notes?: string;
  ucs?: string;
  notes?: string;
  has_shapes?: string;
  glyphs?: GlyphData[];
}

// 搜索结果容器
export interface SearchResults {
  query: string;
  results: CharacterEntry[];
}